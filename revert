#!/usr/bin/env perl

# $Ragnarok: revert,v 1.3 2025/10/09 14:05:21 lecorbeau Exp $
# Revert to specific commit. Usage: revert -r<commit number> <filename>.

use strict;
use warnings;
use Cwd qw();
use Config::General;
use File::HomeDir;
use Capture::Tiny 'capture_stdout';
use EOD::Diff qw(do_diff);
use EOD::Sig qw(sign_file);

my ($rev, $file)	= @ARGV;
my $curdir		= Cwd::cwd();
my $rcsdir		= "$curdir/RCS";
my $v			= "$rcsdir/$file,v";
my $conffile		= File::HomeDir->my_home . '/.rcs.conf';
my $conf 		= Config::General->new(
	-ConfigFile		=> $conffile,
	-SplitPolicy		=> 'custom',
	-SplitDelimiter		=> '\s+=\s+',
	-InterPolateVars	=> 1,
	-AutoTrue		=> 1
);
my %config		= $conf->getall;
my $username		= $config{'USERNAME'};
my $sign		= $config{'SIGN'};
my $head;

# Find head to determine the new rev min number.
open(my $fh, '<', $v) or die("Can't open log file: $!\n");
while(my $line = <$fh>) {
	chomp $line;
	if ($line =~ /head\s+(\d+\.\d+)/) {
		$head = $1;
		last;
	}
}
close($fh) or die("Can't close file: $!\n");

# Split $head
my ($maj, $min)	= split /\./, $head;
my $new		= $min + 1;
my $msg		= "Reverted $file to revision $rev state";

# Generate diff between revisions, ignoring keywords
sub do_diff {
	my ($file)	= @_;

	open(my $diff, '>', "$file.diff") or die("Open diff failed\n");
	print($diff capture_stdout {
		system('/usr/bin/rcsdiff', '-kk', '-u', "-r$head", "-r$rev", "$file");
		return;
	});
	close($diff) or die("Can't close $diff: $!\n");
}
do_diff($file);

# Patch working file
system("/usr/bin/patch < $file.diff") == 0
	or die("Can't patch $file: $!\n");

# Now, check in reverted rev
system("/usr/bin/ci", "-w$username", "-u$maj.$new", "-m$msg", "$file") == 0
	or die("Can't run ci against $file\n");

# Remove temp diff
unlink("$file.diff") or die("Can't delete $file.diff: $!\n");

# Now create a proper diff file.
do_diff($file);

# Sign the file if verify_sig is true
sign_file($file);
